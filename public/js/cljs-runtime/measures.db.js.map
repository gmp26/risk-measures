{"version":3,"sources":["measures/db.cljs"],"mappings":";AAGA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA;AAOL,AAAKC,AAAM,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC;AAeZ;;;AAAA,AAAMC;AAAN,AAGE,AAAA,AAACC,AAAE,AAAA,AAAA,AAAAC,AAASJ;;AAEd;;;AAAA,AAAMK;AAAN,AAGE,AAAA,AAACF,AAAE,AAAA,AAAA,AAAAC,AAASJ;;AAEd,AAAA,AAAMM;AAAN,AAAkB,AAAA,AAAA,AAAAF,AAAYJ;;AAC9B,AAAA,AAAMO;AAAN,AAAe,AAAA,AAAA,AAAAH,AAASJ","names":["measures.db/numeric-fields","measures.db/state","reagent.core.atom","measures.db/flash?","cljs.core._EQ_","cljs.core/deref","measures.db/home?","measures.db/baseline","measures.db/final"],"sourcesContent":["(ns measures.db\n  (:require [reagent.core :as r]))\n\n(def numeric-fields #{:baseline\n                     :RR\n                     :PC\n                     :OR\n                     :HR\n                     :final})\n\n(def state (r/atom {:page? :flash\n\n                        :baseline 0.1\n                        :RR 1\n                        :PC 0\n                        :OR 1\n                        :HR 1\n                        :final 0.1\n\n                        :errors []\n                        :measure-value 1\n                        :selected-measure :RR\n                        :sig-figs 2\n                        :selected-tool :maths}))\n\n(defn flash?\n  \"Must be called from a component\"\n  []\n  (= (:page? @state) :flash))\n\n(defn home?\n  \"Must be called from a component\"\n  []\n  (= (:page? @state) :home))\n\n(defn baseline [] (:baseline @state))\n(defn final [] (:final @state))\n\n\n\n"]}